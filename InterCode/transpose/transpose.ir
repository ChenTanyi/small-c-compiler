global	array	s	25	
define	transpose:	
addi	$sp	$sp	-116	
=	#0	#108	
=	#104	0	
label	for.loop.1.start:	
<	#104	#0	
beq	@-1	$0	for.loop.1.end	
=	#108	0	
label	for.loop.2.start:	
<	#108	#0	
beq	@-1	$0	for.loop.2.end	
*	#104	20	
*	#108	4	
+	@-1	@-2	
[]=	#4	@-1	
*	#108	20	
*	#104	4	
+	@-1	@-2	
[]	#g_s	@-1	
=	@-5	@-1	
label	for.loop.2.next:	
+=	#108	1	
j	for.loop.2.start	
label	for.loop.2.end:	
label	for.loop.1.next:	
+=	#104	1	
j	for.loop.1.start	
label	for.loop.1.end:	
=	#104	0	
label	for.loop.3.start:	
<	#104	#0	
beq	@-1	$0	for.loop.3.end	
=	#108	0	
label	for.loop.4.start:	
<	#108	#0	
beq	@-1	$0	for.loop.4.end	
*	#104	20	
*	#108	4	
+	@-1	@-2	
[]=	#g_s	@-1	
*	#104	20	
*	#108	4	
+	@-1	@-2	
[]	#4	@-1	
=	@-5	@-1	
label	for.loop.4.next:	
+=	#108	1	
j	for.loop.4.start	
label	for.loop.4.end:	
label	for.loop.3.next:	
+=	#104	1	
j	for.loop.3.start	
label	for.loop.3.end:	
addi	$sp	$sp	116	
return	0	
define	main:	
[]=	#g_s	0	
=	@-1	1	
[]=	#g_s	4	
=	@-1	2	
[]=	#g_s	8	
=	@-1	3	
[]=	#g_s	12	
=	@-1	4	
[]=	#g_s	16	
=	@-1	5	
[]=	#g_s	20	
=	@-1	6	
[]=	#g_s	24	
=	@-1	7	
[]=	#g_s	28	
=	@-1	8	
[]=	#g_s	32	
=	@-1	9	
[]=	#g_s	36	
=	@-1	10	
[]=	#g_s	40	
=	@-1	11	
[]=	#g_s	44	
=	@-1	12	
[]=	#g_s	48	
=	@-1	13	
[]=	#g_s	52	
=	@-1	14	
[]=	#g_s	56	
=	@-1	15	
[]=	#g_s	60	
=	@-1	16	
[]=	#g_s	64	
=	@-1	17	
[]=	#g_s	68	
=	@-1	18	
[]=	#g_s	72	
=	@-1	19	
[]=	#g_s	76	
=	@-1	20	
[]=	#g_s	80	
=	@-1	21	
[]=	#g_s	84	
=	@-1	22	
[]=	#g_s	88	
=	@-1	23	
[]=	#g_s	92	
=	@-1	24	
[]=	#g_s	96	
=	@-1	25	
addi	$sp	$sp	-16	
read	func	
=	#0	$v0	
paras	#-8	#0	
call	transpose	
=	#4	0	
label	for.loop.5.start:	
<	#4	#0	
beq	@-1	$0	for.loop.5.end	
=	#8	0	
label	for.loop.6.start:	
<	#8	#0	
beq	@-1	$0	for.loop.6.end	
*	#4	20	
*	#8	4	
+	@-1	@-2	
[]	#g_s	@-1	
write	@-1	
label	for.loop.6.next:	
+=	#8	1	
j	for.loop.6.start	
label	for.loop.6.end:	
label	for.loop.5.next:	
+=	#4	1	
j	for.loop.5.start	
label	for.loop.5.end:	
addi	$sp	$sp	16	
return	0	
